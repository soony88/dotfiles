# nvim
alias v=nvim

# fzf aliases
# use fp to do a fzf search and preview the files
alias fp="fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'"
# search for a file with fzf and open it in vim
alias vf='v $(fp)'

# Easy navigation
alias cd..="cd .."
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .4="cd ../../../.."

# Command shortening
alias la="ls -lAh"  # ls in a list including hidden files
alias l.="ls -d .*"  # show hidden files/directories
alias mkdir="mkdir -p"  # create parent directories by default

alias g="git"
alias f="fuck"

# Docker
alias docker_stop_containers='docker stop $(docker ps -a -q)'
alias docker_clean_images='docker rmi -f $(docker images -q)'
alias docker_clean_volumes='docker volume rm $(docker volume ls -qf dangling=true)'
alias docker_clean_containers='docker rm $(docker ps -qa --no-trunc --filter "status=exited")'

# Pip
alias pip_uninstall_all='pip freeze | xargs pip uninstall -y'
alias pip_upgrade_all='pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U'

# SSM
alias ssm='aws ssm start-session --target'

#### AWS ADFS

# Wagering
alias adfs_wag_dev='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-tabcorp-wagering-dev-Developer && kc wag-dev'
alias adfs_wag_test='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-tabcorp-wagering-test-Developer && kc wag-test'
alias adfs_wag_int='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-integration-test-Developer && kc wag-int'
alias adfs_wag_env='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-environment-test-Developer && kc wag-env'
alias adfs_wag_prod='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-tabcorp-wagering-prod-Developer && kc wag-prod'

# TAB
alias adfs_tab_test='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-tabcorp-tab-test-Developer && kc tab-test'
alias adfs_tab_prod='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-tabcorp-tab-prod-readonly && kc tab-prod'

# Non Baseline
alias adfs_nonprod='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-nonprod-Developer' # && kc tab-test'
alias adfs_preprod='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-preprod-Developer' # && kc tab-prod'
alias adfs_prod='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-prod-Developer' # && kc tab-prod'

# Baseline
alias adfs_baseline_nonprod='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-baseline-nonprod-Developer' # && kc tab-test'
alias adfs_baseline_preprod='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-baseline-preprod-Developer' # && kc tab-prod'
alias adfs_baseline_prod='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-baseline-prod-Developer' # && kc tab-prod'

# Unused
alias adfs_wag_dev_ro='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-tabcorp-wagering-dev-readonly && kc wag-dev'
alias adfs_wag_test_ro='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-tabcorp-wagering-test-readonly && kc wag-test'
alias adfs_wag_env_ro='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-wagering-environment-test-readonly && kc wag-env'
alias adfs_wag_prod_ro='aws-adfs -u corpad\\pa_kumuycians -p $(cat ~/.ssh/adfspass.txt) --role role/tc-rg-tabcorp-wagering-prod-readonly && kc wag-prod'


# Kubectl
alias k="kubectl"
alias kdash="kubectl -n addons describe secret \$(kubectl -n addons get secret | awk '/^admin-user-/{print \$1}') | awk '\$1==\"token:\"{print \$2}'"

# Update Kubeconfig
function kc {
  aws eks update-kubeconfig --name $1-terraform-eks-cluster
}

# Fuck Zscaler
alias start-zscaler="open -a /Applications/Zscaler/Zscaler.app --hide; sudo find /Library/LaunchDaemons -name '*zscaler*' -exec launchctl load {} \;"
alias kill-zscaler="find /Library/LaunchAgents -name '*zscaler*' -exec launchctl unload {} \;;sudo find /Library/LaunchDaemons -name '*zscaler*' -exec launchctl unload {} \;"
